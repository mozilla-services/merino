window.SIDEBAR_ITEMS = {"enum":[["Bytes","The unit in which to display byte values"],["Conflicts","What to do when the delete by query hits version conflicts?"],["DefaultOperator","The default operator for query string query (AND or OR)"],["ExpandWildcards","Whether to expand wildcard expression to concrete indices that are open, closed or both."],["Format","Optional parameter to specify the high level file format"],["Health","A health status (“green”, “yellow”, or “red” to filter only indices matching the specified health status"],["Level","Specify the level of detail for returned information"],["OpType","Explicit operation type. Defaults to `index` for requests with an explicit document ID, and to `create`for requests without an explicit document ID"],["Refresh","If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes."],["SearchType","Search operation type"],["Size","The multiplier in which to display values"],["Slices","Control the number of slices a task should be divided into. Defaults to `Slices::Count(1)`, meaning the task is not sliced."],["SourceFilter","Control how the `_source` field is returned with every hit."],["SuggestMode","Specify suggest mode"],["Time","The unit in which to display time values"],["TrackTotalHits","Control how the total number of hits should be tracked."],["Type","The type to sample (default: cpu)"],["VersionType","Specific version type"],["WaitForEvents","Wait until all currently queued events with the given priority are processed"],["WaitForStatus","Wait until cluster is in a specific state"]]};