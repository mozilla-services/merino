window.SIDEBAR_ITEMS = {"macro":[["align32","Align input value to the next multiple of 4 bytes"],["align_n2","Align input value to the next multiple of n bytes Valid only if n is a power of 2"],["custom_check","Helper macro for nom parsers: raise error if the condition is true"],["empty","Helper macro for nom parsers: raise error if input is not empty"],["error_if","Helper macro for nom parsers: raise error if the condition is true"],["flat_take","Combination and flat_map! and take! as first combinator"],["newtype_enum","Helper macro for newtypes: declare associated constants and implement Display trait"],["parse_hex_to_u64","Read a slice as a big-endian value."],["q","Nom combinator that returns the given expression unchanged"],["slice_fixed","Parse a slice and return a fixed-sized array of bytes"],["upgrade_error","Apply combinator, trying to “upgrade” error to next error type (using the `Into` or `From` traits)."],["upgrade_error_to","Apply combinator, trying to “upgrade” error to next error type (using the `Into` or `From` traits)."]],"mod":[["combinator","General purpose combinators"],["debug","Helper functions and structures for debugging purpose"],["macros","Helper macros"]],"trait":[["Serialize","Common trait for structures serialization"]]};