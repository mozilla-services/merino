# These environment variables must be set in CircleCI UI
#
# DOCKERHUB_REPO - docker hub repo, format: <username>/<repo>
# DOCKER_USER    - login info for docker hub
# DOCKER_PASS

version: 2.1

workflows:
  version: 2
  build-deploy:
    jobs:
      - checks:
          filters:
            tags:
              only: /.*/

      - build-and-test:
          filters:
            tags:
              only: /.*/

      - docs-build

      - docs-publish-github-pages:
          requires:
            - docs-build
          filters:
            branches:
              only: main

      - docker-image-build:
          filters:
            tags:
              only: /.+/
      
      - integration-tests:
          name: integration-tests
          requires:
            - checks
            - build-and-test
            - docker-image-build

      - docker-image-publish:
          requires:
            - checks
            - build-and-test
            - docker-image-build
          filters:
            branches:
              only: main
            tags:
              only: /v.+/

jobs:
  checks:
    docker:
      - image: mozilla/cidockerbases:rust-latest
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - checkout
      - rust-check

  build-and-test:
    docker:
      - image: mozilla/cidockerbases:rust-latest
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
        environment:
          RUST_BACKTRACE: 1
      - image: redis
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS

    steps:
      - checkout
      - write-version
      - cargo-build
      - run-tests

  docker-image-build:
    docker:
      - image: mozilla/cidockerbases:docker-latest

    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - write-version
      - run:
          name: Build Docker image
          command: docker build -t app:build .
      - run:
          name: Save image into workspace
          command: |
            mkdir -p workspace
            docker save -o workspace/merino.tar app:build
            gzip workspace/merino.tar
      - persist_to_workspace:
          root: workspace
          paths:
            - merino.tar.gz

  integration-tests:
    machine:
      docker_layer_caching: true
      image: ubuntu-2004:202101-01 # Ubuntu 20.04, Docker v20.10.2, Docker Compose v1.28.2
    working_directory: ~/merino
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - dockerhub-login
      - run:
          name: Load Docker image from workspace
          command: docker load -i workspace/merino.tar.gz
      - run:
         name: Run Integration tests
         command: |
           docker-compose --version
           docker-compose -f test-engineering/docker-compose.yml up --abort-on-container-exit

  docker-image-publish:
    docker:
      - image: mozilla/cidockerbases:docker-latest
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: workspace
      - dockerhub-login
      - run:
          name: Load Docker image from workspace
          command: docker load -i workspace/merino.tar.gz
      - run:
          name: Push to Dockerhub
          command: |
            if [ "${CIRCLE_BRANCH}" == "main" ]; then
              DOCKER_TAG="${CIRCLE_SHA1}"
            fi

            if [ -n "${CIRCLE_TAG}" ]; then
              DOCKER_TAG="$CIRCLE_TAG"
            fi

            if [ -n "${DOCKER_TAG}" ]; then
              echo ${DOCKERHUB_REPO}:${DOCKER_TAG}
              docker tag app:build ${DOCKERHUB_REPO}:${DOCKER_TAG}
              docker images
              docker push "${DOCKERHUB_REPO}:${DOCKER_TAG}"
            else
              echo "Not pushing to dockerhub for tag=${CIRCLE_TAG} branch=${CIRCLE_BRANCH}"
            fi

  docs-build:
    docker:
      - image: mozilla/cidockerbases:rust-latest
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - checkout
      - run:
          name: Build docs
          command: |
            cargo doc --document-private-items --workspace
            # Add a root index.html that redirects to a specific crate's docs.
            echo '<meta http-equiv="refresh" content="0; URL=./merino/index.html" />' > target/doc/index.html
            mkdir workspace
            cp -r target/doc workspace/
      - persist_to_workspace:
          root: workspace
          paths:
            - doc

  docs-publish-github-pages:
    docker:
      - image: node
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - run:
          name: Disable jekyll builds
          command: touch workspace/doc/.nojekyll
      - add_ssh_keys:
          fingerprints:
            - "d7:41:54:5a:2e:e0:17:68:12:59:08:8e:7a:21:dc:cc"
      - run:
          name: Deploy docs to gh-pages
          command: |
            npx --yes gh-pages@3.0.0 \
              --user "ci-build <ci-build@merino.mozilla.org>" \
              --message "[skip ci] Docs updates" \
              --dist workspace/doc

commands:
  dockerhub-login:
    steps:
      - run:
          name: Login to Dockerhub
          command: |
            if [ "${DOCKER_USER}" == "" ] || [ "${DOCKER_PASS}" == "" ]; then
              echo "Skipping Login to DockerHub, credentials unavailable"
            else
              echo "${DOCKER_PASS}" | docker login -u="${DOCKER_USER}" --password-stdin
            fi

  rust-check:
    steps:
      - run:
          name: Rust Checks
          command: |
            cargo fmt -- --check
            cargo audit
            cargo clippy --all --all-targets --all-features -- -D warnings

  cargo-build:
    steps:
      - run:
          name: cargo build
          command: cargo build

  write-version:
    steps:
      - run:
          name: Create a version.json
          command: |
            # create a version.json per
            # https://github.com/mozilla-services/Dockerflow/blob/master/docs/version_object.md
            printf '{"commit":"%s","version":"%s","source":"https://github.com/%s/%s","build":"%s"}\n' \
            "$CIRCLE_SHA1" \
            "$CIRCLE_TAG" \
            "$CIRCLE_PROJECT_USERNAME" \
            "$CIRCLE_PROJECT_REPONAME" \
            "$CIRCLE_BUILD_URL" > version.json

  run-tests:
    steps:
      - run:
          name: cargo test
          command: cargo test --all --verbose
